generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(CANDIDATE)
  createdAt DateTime @default(now())

  jobs         Job[]         @relation("UserJobs")
  applications Application[]
  favorites    Favorite[]
}

model Job {
  id          String    @id @default(uuid())
  title       String
  description String
  jobType     String
  location    String
  salary      Int
  status      JobStatus @default(OPEN)
  deadline    DateTime
  companyName String
  managerId   String
  createdAt   DateTime  @default(now())

  manager      User          @relation("UserJobs", fields: [managerId], references: [id])
  applications Application[]
  favorites    Favorite[]
}

model Application {
  id          String            @id @default(uuid())
  resumePath  String
  status      ApplicationStatus @default(PENDING)
  createdAt   DateTime          @default(now())
  jobId       String
  candidateId String

  job       Job  @relation(fields: [jobId], references: [id])
  candidate User @relation(fields: [candidateId], references: [id])

  @@unique([jobId, candidateId]) // prevent duplicate application
}

model Favorite {
  id        String   @id @default(uuid())
  userId    String
  jobId     String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  job       Job      @relation(fields: [jobId], references: [id])

  @@unique([userId, jobId])
}

enum Role {
  CANDIDATE
  HIRING_MANAGER
  ADMIN
}

enum ApplicationStatus {
  PENDING
  REVIEWED
  REJECTED
}

enum JobStatus {
  OPEN
  CLOSED
}
